// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model users {
    id        Int       @id @default(autoincrement())
    firstName String?
    lastName  String?
    email     String    @unique
    password  String
    username  String?   @unique
    mobile    String?
    roles     String[]
    tokens    String[]
    lastLogin DateTime?
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
}

model verification_codes {
    id         Int      @id @default(autoincrement())
    email      String   @unique
    expiration DateTime
    code       String
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
}

// KLASMAN PUANLARI
model classificationPoints {
    id                        Int                         @id @default(autoincrement())
    identifierName            String
    classificationPointsTable classificationPointsTable[]
}

model classificationPointsTable {
    id                     Int                   @id @default(autoincrement())
    gender                 String
    fullname               String
    category               String
    point                  Int
    classificationPoints   classificationPoints? @relation(fields: [classificationPointsId], references: [id])
    classificationPointsId Int?
}

// MAÇ PROGRAMI
model matchSchedule {
    id               Int                @id @default(autoincrement())
    date             DateTime
    day              String
    hour             String
    team1            String
    team2            String
    team1MatchResult team1MatchResult[]
    team2MatchResult team2MatchResult[]
}

model team1MatchResult {
    id              Int            @id @default(autoincrement())
    team            String
    result          Int
    matchSchedule   matchSchedule? @relation(fields: [matchScheduleId], references: [id])
    matchScheduleId Int?
}

model team2MatchResult {
    id              Int            @id @default(autoincrement())
    team            String
    result          Int
    matchSchedule   matchSchedule? @relation(fields: [matchScheduleId], references: [id])
    matchScheduleId Int?
}

// A PLAY OFF

model playoff {
    id             Int            @id @default(autoincrement())
    identifierName String
    playoffNumber  Int
    playoffTable   playoffTable[]
}

model playoffTable {
    id        Int      @id @default(autoincrement())
    team      String
    result    Float
    playoff   playoff? @relation(fields: [playoffId], references: [id])
    playoffId Int?
}

// SONUÇLARI
